plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    runs {
        client {
            runDir = 'run/client'
        }

        server {
            runDir = 'run/server'
        }
    }

    forge {
        convertAccessWideners = true
        mixinConfig "manascore.mixins.json"
        mixinConfig "manascore-common.mixins.json"
    }
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"
    modRuntimeOnly "maven.modrinth:spark:3FEq2lT7"

    common(project(path: ':common', configuration: 'namedElements')) { transitive = false}
    common(project(path: ':commonTest', configuration: 'namedElements')) { transitive = false}
    implementation(project(path: ':forge', configuration: 'namedElements')) { transitive = false}
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}
